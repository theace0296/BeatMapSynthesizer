x64:
  firstOrDefaultFilePatterns:
    - '**/*'
    - '!build{,/**/*}'
    - '!dist{,/**/*}'
    - '!**/node_modules/*/{CHANGELOG.md,README.md,README,readme.md,readme}'
    - '!**/node_modules/*/{test,__tests__,tests,powered-test,example,examples}'
    - '!**/node_modules/*.d.ts'
    - '!**/node_modules/.bin'
    - '!**/*.{iml,o,hprof,orig,pyc,pyo,rbc,swp,csproj,sln,xproj}'
    - '!.editorconfig'
    - '!**/._*'
    - '!**/{.DS_Store,.git,.hg,.svn,CVS,RCS,SCCS,.gitignore,.gitattributes}'
    - '!**/{__pycache__,thumbs.db,.flowconfig,.idea,.vs,.nyc_output}'
    - '!**/{appveyor.yml,.travis.yml,circle.yml}'
    - '!**/{npm-debug.log,yarn.lock,.yarn-integrity,.yarn-metadata.json}'
    - build/js/app.js
    - build/js/__beatMapArgs.js
    - build/js/pythonApi.js
    - build/js/worker.js
    - build/js/preload.js
    - build/js/renderer.js
    - build/index.html
    - build/css/docs.css
    - build/css/flat-ui.css
    - build/images/beatMapSynth_Banner.jpg
    - build/scripts/beatMapSynthServer.py
    - build/scripts/WinPython.exe
    - build/scripts/VC_redist.x64.exe
    - build/scripts/cover.jpg
    - build/scripts/ffmpeg.exe
    - build/scripts/ffplay.exe
    - build/scripts/ffprobe.exe
    - build/scripts/models/*.pkl
    - '!*.map'
    - '!*.njsproj'
    - '!build/scripts/__pycache__'
    - '!build/scripts/WPy64'
    - '!build/scripts/.vscode'
    - '!build/scripts/requirements.txt'
    - node_modules/flat-ui/**/*
    - package.json
    - '!**/*.{iml,hprof,orig,pyc,pyo,rbc,swp,csproj,sln,suo,xproj,cc,d.ts,pdb'
    - '!**/._*'
    - '!**/electron-builder.{yaml,yml,json,json5,toml}'
    - '!**/{.git,.hg,.svn,CVS,RCS,SCCS,__pycache__,.DS_Store,thumbs.db,.gitignore,.gitkeep,.gitattributes,.npmignore,.idea,.vs,.flowconfig,.jshintrc,.eslintrc,.circleci,.yarn-integrity,.yarn-metadata.json,yarn-error.log,yarn.lock,package-lock.json,npm-debug.log,appveyor.yml,.travis.yml,circle.yml,.nyc_output}'
    - '!.yarn{,/**/*}'
    - '!.editorconfig'
    - '!.yarnrc.yml'
  nodeModuleFilePatterns:
    - '**/*'
    - '**/*'
    - '!**/node_modules/*/{CHANGELOG.md,README.md,README,readme.md,readme}'
    - '!**/node_modules/*/{test,__tests__,tests,powered-test,example,examples}'
    - '!**/node_modules/*.d.ts'
    - '!**/node_modules/.bin'
    - '!**/*.{iml,o,hprof,orig,pyc,pyo,rbc,swp,csproj,sln,xproj}'
    - '!.editorconfig'
    - '!**/._*'
    - '!**/{.DS_Store,.git,.hg,.svn,CVS,RCS,SCCS,.gitignore,.gitattributes}'
    - '!**/{__pycache__,thumbs.db,.flowconfig,.idea,.vs,.nyc_output}'
    - '!**/{appveyor.yml,.travis.yml,circle.yml}'
    - '!**/{npm-debug.log,yarn.lock,.yarn-integrity,.yarn-metadata.json}'
    - build/js/app.js
    - build/js/__beatMapArgs.js
    - build/js/pythonApi.js
    - build/js/worker.js
    - build/js/preload.js
    - build/js/renderer.js
    - build/index.html
    - build/css/docs.css
    - build/css/flat-ui.css
    - build/images/beatMapSynth_Banner.jpg
    - build/scripts/beatMapSynthServer.py
    - build/scripts/WinPython.exe
    - build/scripts/VC_redist.x64.exe
    - build/scripts/cover.jpg
    - build/scripts/ffmpeg.exe
    - build/scripts/ffplay.exe
    - build/scripts/ffprobe.exe
    - build/scripts/models/*.pkl
    - '!*.map'
    - '!*.njsproj'
    - '!build/scripts/__pycache__'
    - '!build/scripts/WPy64'
    - '!build/scripts/.vscode'
    - '!build/scripts/requirements.txt'
    - node_modules/flat-ui/**/*
nsis:
  script: "!include \"E:\\BeatMapSynthesizer\\BeatMapSynthesizer\\node_modules\\app-builder-lib\\templates\\nsis\\include\\StdUtils.nsh\"\n!addincludedir \"E:\\BeatMapSynthesizer\\BeatMapSynthesizer\\node_modules\\app-builder-lib\\templates\\nsis\\include\"\n!macro _isUpdated _a _b _t _f\n  ${StdUtils.TestParameter} $R9 \"updated\"\n  StrCmp \"$R9\" \"true\" `${_t}` `${_f}`\n!macroend\n!define isUpdated `\"\" isUpdated \"\"`\n\n!macro _isForceRun _a _b _t _f\n  ${StdUtils.TestParameter} $R9 \"force-run\"\n  StrCmp \"$R9\" \"true\" `${_t}` `${_f}`\n!macroend\n!define isForceRun `\"\" isForceRun \"\"`\n\n!macro _isKeepShortcuts _a _b _t _f\n  ${StdUtils.TestParameter} $R9 \"keep-shortcuts\"\n  StrCmp \"$R9\" \"true\" `${_t}` `${_f}`\n!macroend\n!define isKeepShortcuts `\"\" isKeepShortcuts \"\"`\n\n!macro _isNoDesktopShortcut _a _b _t _f\n  ${StdUtils.TestParameter} $R9 \"no-desktop-shortcut\"\n  StrCmp \"$R9\" \"true\" `${_t}` `${_f}`\n!macroend\n!define isNoDesktopShortcut `\"\" isNoDesktopShortcut \"\"`\n\n!macro _isDeleteAppData _a _b _t _f\n  ${StdUtils.TestParameter} $R9 \"delete-app-data\"\n  StrCmp \"$R9\" \"true\" `${_t}` `${_f}`\n!macroend\n!define isDeleteAppData `\"\" isDeleteAppData \"\"`\n\n!macro _isForAllUsers _a _b _t _f\n  ${StdUtils.TestParameter} $R9 \"allusers\"\n  StrCmp \"$R9\" \"true\" `${_t}` `${_f}`\n!macroend\n!define isForAllUsers `\"\" isForAllUsers \"\"`\n\n!macro _isForCurrentUser _a _b _t _f\n  ${StdUtils.TestParameter} $R9 \"currentuser\"\n  StrCmp \"$R9\" \"true\" `${_t}` `${_f}`\n!macroend\n!define isForCurrentUser `\"\" isForCurrentUser \"\"`\n\n!macro addLangs\n  !insertmacro MUI_LANGUAGE \"English\"\n  !insertmacro MUI_LANGUAGE \"German\"\n  !insertmacro MUI_LANGUAGE \"French\"\n  !insertmacro MUI_LANGUAGE \"SpanishInternational\"\n  !insertmacro MUI_LANGUAGE \"SimpChinese\"\n  !insertmacro MUI_LANGUAGE \"TradChinese\"\n  !insertmacro MUI_LANGUAGE \"Japanese\"\n  !insertmacro MUI_LANGUAGE \"Korean\"\n  !insertmacro MUI_LANGUAGE \"Italian\"\n  !insertmacro MUI_LANGUAGE \"Dutch\"\n  !insertmacro MUI_LANGUAGE \"Danish\"\n  !insertmacro MUI_LANGUAGE \"Swedish\"\n  !insertmacro MUI_LANGUAGE \"Norwegian\"\n  !insertmacro MUI_LANGUAGE \"Finnish\"\n  !insertmacro MUI_LANGUAGE \"Russian\"\n  !insertmacro MUI_LANGUAGE \"Portuguese\"\n  !insertmacro MUI_LANGUAGE \"PortugueseBR\"\n  !insertmacro MUI_LANGUAGE \"Polish\"\n  !insertmacro MUI_LANGUAGE \"Ukrainian\"\n  !insertmacro MUI_LANGUAGE \"Czech\"\n  !insertmacro MUI_LANGUAGE \"Slovak\"\n  !insertmacro MUI_LANGUAGE \"Hungarian\"\n  !insertmacro MUI_LANGUAGE \"Arabic\"\n  !insertmacro MUI_LANGUAGE \"Turkish\"\n  !insertmacro MUI_LANGUAGE \"Thai\"\n  !insertmacro MUI_LANGUAGE \"Vietnamese\"\n!macroend\n\n!include \"C:\\Users\\CHASE~1.CRR\\AppData\\Local\\Temp\\t-oBPlJr\\0-messages.nsh\"\n!addplugindir /x86-unicode \"C:\\Users\\chase.CRR-MSI-X99\\AppData\\Local\\electron-builder\\Cache\\nsis\\nsis-resources-3.4.1\\plugins\\x86-unicode\"\n\n!include \"common.nsh\"\n!include \"extractAppPackage.nsh\"\n\n# https://github.com/electron-userland/electron-builder/issues/3972#issuecomment-505171582\nCRCCheck off\nWindowIcon Off\nAutoCloseWindow True\nRequestExecutionLevel ${REQUEST_EXECUTION_LEVEL}\n\nFunction .onInit\n  !ifndef SPLASH_IMAGE\n    SetSilent silent\n  !endif\n\n  !insertmacro check64BitAndSetRegView\nFunctionEnd\n\nFunction .onGUIInit\n  InitPluginsDir\n\n  !ifdef SPLASH_IMAGE\n    File /oname=$PLUGINSDIR\\splash.bmp \"${SPLASH_IMAGE}\"\n    BgImage::SetBg $PLUGINSDIR\\splash.bmp\n    BgImage::Redraw\n  !endif\nFunctionEnd\n\nSection\n  !ifdef SPLASH_IMAGE\n    HideWindow\n  !endif\n\n  StrCpy $INSTDIR \"$TEMP\\${UNPACK_DIR_NAME}\"\n  RMDir /r $INSTDIR\n  SetOutPath $INSTDIR\n\n  !ifdef APP_DIR_64\n    !ifdef APP_DIR_ARM64\n      !ifdef APP_DIR_32\n        ${if} ${IsNativeARM64}\n          File /r \"${APP_DIR_ARM64}\\*.*\"\n        ${elseif} ${RunningX64}\n          File /r \"${APP_DIR_64}\\*.*\"\n        ${else}\n          File /r \"${APP_DIR_32}\\*.*\"\n        ${endIf}\n      !else\n        ${if} ${IsNativeARM64}\n          File /r \"${APP_DIR_ARM64}\\*.*\"\n        ${else}\n          File /r \"${APP_DIR_64}\\*.*\"\n        {endIf}\n      !endif\n    !else\n      !ifdef APP_DIR_32\n        ${if} ${RunningX64}\n          File /r \"${APP_DIR_64}\\*.*\"\n        ${else}\n          File /r \"${APP_DIR_32}\\*.*\"\n        ${endIf}\n      !else\n        File /r \"${APP_DIR_64}\\*.*\"\n      !endif\n    !endif\n  !else\n    !ifdef APP_DIR_32\n      File /r \"${APP_DIR_32}\\*.*\"\n    !else\n      !insertmacro extractEmbeddedAppPackage\n    !endif\n  !endif\n\n  System::Call 'Kernel32::SetEnvironmentVariable(t, t)i (\"PORTABLE_EXECUTABLE_DIR\", \"$EXEDIR\").r0'\n  System::Call 'Kernel32::SetEnvironmentVariable(t, t)i (\"PORTABLE_EXECUTABLE_FILE\", \"$EXEPATH\").r0'\n  System::Call 'Kernel32::SetEnvironmentVariable(t, t)i (\"PORTABLE_EXECUTABLE_APP_FILENAME\", \"${APP_FILENAME}\").r0'\n  ${StdUtils.GetAllParameters} $R0 0\n\n  !ifdef SPLASH_IMAGE\n    BgImage::Destroy\n  !endif\n\n\tExecWait \"$INSTDIR\\${APP_EXECUTABLE_FILENAME} $R0\" $0\n  SetErrorLevel $0\n\n  SetOutPath $PLUGINSDIR\n\tRMDir /r $INSTDIR\nSectionEnd\n"
